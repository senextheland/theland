#var {me} {senex}
#session $me theland.notroot.com 5000
#split 0 0
#config {speedwalk} {on}
#log {append} {$me.log}

#ticker {fidget} {emote glances around.} {120}

#alias {get_ready} {
  #read {mud/utils.tt};
  #read {mud/logging.tt};
  #read {mud/task.tt};
  #read {mud/exec.tt};
  #read {mud/hook.tt};
  #read {mud/commands.tt};
  #read {mud/tick.tt};
  #read {mud/cast.tt};
  #read {mud/eq-repair.tt};
  #read {mud/robot.tt};
  #read {mud/fight.tt};
  #read {mud/bash.tt};
  #read {mud/protect.tt};
  #read {mud/assist.tt};
  #read {mud/walk.tt};
  #read {mud/pawn.tt};
  #read {mud/regen.tt};
  #read {mud/recover.tt};
  #read {mud/kill.tt};
  #read {mud/fish-test.tt};
  #read {mud/dagger.tt}; 
  #read {mud/leader.tt};
  #read {mud/control.tt};
  #read {mud/zones.tt};
  #read {mud/spellup.tt};
  #read {mud/scary-things.tt};
  #read {mud/follow-orders.tt};
  #read {mud/gim-commands.tt}

  cmd_score {
    #read {mud/prompt.tt};
    #read {mud/health.tt};

    #var {health_low} {2000}
  };

  #function {deposit_target_coins} {
    #if {@regen_needed{}} {
      #var {result} {1500000}    
    } {
      #var {result} {600000}
    }
  };

  need_spell_add {spiritual armor};
  hook {bless_down} {add} {$me} {cmd_cast_me {bless} {debug BLESS UP} {debug BLESS FAIL}};
  hook {armor_down} {add} {$me} {cmd_cast_me {armor} {debug ARMOR UP} {debug ARMOR FAIL}};
  hook {spirit_armor_down} {add} {$me} {cmd_cast_me {spiritual armor} {debug SPIRIT ARMOR UP} {debug SPIRIT ARMOR FAIL}};
  hook {on_eq_repair} {add} {bless} {bless_eq_item};
  hook {on_eq_bless_unrepairable} {add} {bless} {bless_all_unrepairable};

  #nop set_robot {silk} {Silk};
  set_robot {soren} {Soren};
  protect {$robot_description} {$robot};
  reset_weapon_state
}

#alias {cmd_deposit_self} {
  cmd_score {cmd_deposit {%1} {%2}}
}

#action {A pile of gold coins} {get all.coins}

#action {You can't see a damn thing, you're blinded!} {
  tell group 'oops: i'm blind;
  whisper polgara unblind
}

#action {Silk gives you Aethyrian Body Armor.} {unstash_silk}

#alias {stash_silk} {
  get aethyr-armor xanth; give aethyr-armor silk  
}

#alias {unstash_silk} {
  put aethyr-armor xanth
}

#alias {reload} {
  #read {mud/adapter.tt};
  #read {senex-test.tt};
  get_ready
}

#alias {bless_eq_item} {
  cmd_cast {cast 'bless' $eq_item_name}
    {on_eq_blessed; %1}
    {debug BLESS-EQ-ITEM: FAIL --> continue anyway; %1}
}

#alias {bless_all_unrepairable} {
  #if {"$eq_needs_bless[The Holy Grail]" == "true"} {
    #var {eq_item_name} {holy-grail};
    #var {eq_item_title} {The Holy Grail};
    rem holy-grail;
    bless_eq_item
      {grab holy-grail; %1}
      {grab holy-grail; %2}
  } {
    %1
  }
}

#alias {load_begin_loop} {
  zone_loop
    {zone_tridac_kill}
    {zone_antipal_kill}
    {zone_blizz_kill}
    {zone_tridac_kill}
    {zone_x2_kill}
    {zone_darkwiz_castle_quick}
    {zone_tridac_kill}
    {zone_tzen}
    {zone_tzen_walk_sell_magicite}
}

#alias {begin_loop} {
  load_begin_loop;
  zone_loop_start
}

#alias {load_overnight_loop} {
  zone_loop
    {zone_tridac_kill}
    {zone_despair_south_west}
    {zone_despair_south_east}    
    {zone_antipal_kill}
    {zone_tridac_kill}
    {zone_x2_kill}
    {zone_darkwiz_castle_quick} 
    {zone_tzen_all}
    {zone_tzen_walk_sell_magicite}
}

#alias {overnight_loop} {
  load_overnight_loop;
  zone_loop_start
}

#alias {load_gim_loop} {
  protect Gim;
  protect Soren;
  protect Felice;
  protect Helper;
  protect Morrigan;
  protect Amon;
  protect Polgara;
  zone_loop
    {zone_tridac_kill}
    {zone_despair_south}
    {zone_despair_north}
    {zone_despair_walk_sell_basalt}
    {zone_felgor_to_door_walk}
    {zone_tridac_kill}    
    {zone_x2_kill_through_darkwiz_quick}
    {zone_tridac_kill}
    {zone_tzen_all}
    {zone_tzen_walk_sell_magicite}
    {zone_antipal_kill}
}

#alias {load_gim_at_keys_loop} {
  protect Gim;
  protect Soren;
  protect Felice;
  protect Helper;
  protect Morrigan;
  protect Amon;
  protect Polgara;
  zone_loop
    {zone_bryad_with_air_walk}
    {zone_despair_south}
    {zone_despair_north}
    {zone_despair_walk_sell_basalt}
    {zone_bryad_with_air_walk}
    {zone_x2_kill}
    {zone_darkwiz_castle_quick}
    {zone_tzen_all}
    {zone_tzen_walk_sell_magicite}
    {zone_bryad_with_air_walk}
    {zone_tridac_kill}
    {zone_achilles}
    {zone_felgor_to_door_walk}
}

#alias {load_test_loop} {
  zone_loop
    {zone_despair_south}
    {zone_despair_north}
    {zone_tridac_kill}
    {zone_tzen_noregen}
    {zone_tzen_walk_sell_magicite}
    {zone_felgor15}
    {zone_despair_south}
    {zone_despair_north}
    {zone_tridac_kill}
    {zone_x2_kill}
    {zone_darkwiz_castle_quick}
    {zone_felgor35}
    {zone_tridac_kill}
}

#nop --------------------------
#nop adapter.tt
#nop --------------------------

#alias {cmd_heal_me} {
  cmd_layhands {$me} {%1} {%2}
}

#var regen_bag {shoe-box}
#alias {regen} {
  rest;
  #if {"$regen_bag" != ""} {
    get stars-cloak $regen_bag; rem mane; wear stars-cloak neck;
    get tabbard $regen_bag; rem lionskin-suit; wear tabbard;
    get mithril-helmet $regen_bag; rem tuor-helm; rem war-crown; wear mithril-helmet;
    get all.locust-skin $regen_bag; rem $item_legs; wear skin legs;
    rem $item_waist; wear skin waist;
    get sapphire-ring $regen_bag; rem holiday-ring; wear sapphire-ring
  }
}
 
#alias {unregen} {
  stand;
  #if {"$regen_bag" != ""} {
    rem sapphire-ring; wear holiday-ring; safe_put sapphire-ring $regen_bag;
    rem mithril-helmet; wear tuor-helm; wear war-crown; safe_put mithril-helmet $regen_bag;
    rem stars-cloak; safe_put stars-cloak $regen_bag; wear mane;  
    rem tabbard; wear lionskin-suit; safe_put tabbard $regen_bag;
    rem locust-skin; rem locust-skin; safe_put all.locust-skin $regen_bag;
    wear $item_legs; wear $item_waist
  }
}

#alias {invis_on} {wear warder}
#alias {invis_off} {rem warder}

#alias {set_default_imms} {
  #var {imm} {{fire}{on} {energy}{off} {poison}{off} {water}{on} {electric}{off} {cold}{on} {acid}{on}}
}
set_default_imms

#var {imm_bag} {case}

#alias {imm_energy_on} {
  get mithril-gauntlets $imm_bag;
  rem ucardi-gauntlets; wear mithril-gauntlets;
  safe_put ucardi-gauntlets $imm_bag
}

#alias {imm_energy_off} {
  get ucardi-gauntlets $imm_bag;
  rem mithril-gauntlets; wear ucardi-gauntlets;
  safe_put mithril-gauntlets $imm_bag
}

#alias {imm_poison_on} {
  get grasshopper-skin $imm_bag;
  rem mane; wear skin neck;
  safe_put mane $imm_bag
}

#alias {imm_poison_off} {
  get mane $imm_bag;
  rem grasshopper-skin; wear mane;
  safe_put grasshopper-skin $imm_bag
}

#alias {imm_electric_on} {
  get bloom $imm_bag;
  rem $item_held; grab bloom;
  safe_put $item_held $imm_bag
}

#alias {imm_electric_off} {
  get $item_held $imm_bag;
  rem bloom; grab $item_held;
  safe_put bloom $imm_bag
}

#alias {imm_transition} {
  #if {"$imm[%1]" != "%2"} {
    #var {imm[%1]} {%2};
    imm_%1_%2
  } {
    #show IMM ALREADY %1 --> %2    
  }
}

#alias {cmd_imm_fire_on} {%1}
#alias {cmd_imm_fire_off} {%1}
#alias {cmd_imm_cold_on} {%1}
#alias {cmd_imm_cold_off} {%1}
#alias {cmd_imm_water_on} {%1}
#alias {cmd_imm_water_off} {%1}
#alias {cmd_imm_acid_on} {%1}
#alias {cmd_imm_acid_off} {%1}

#alias {cmd_imm_energy_on} {
  cmd_imm_transition {energy} {on} {You wear a pair of mithril gauntlets} {%1} {%2}
}

#alias {cmd_imm_energy_off} {
  cmd_imm_transition {energy} {off} {You wear A pair of glowing gauntlets} {%1} {%2}
}

#alias {cmd_imm_poison_on} {
  cmd_imm_transition {poison} {on} {You wear A Grasshopper's Skin} {%1} {%2}
}

#alias {cmd_imm_poison_off} {
  cmd_imm_transition {poison} {off} {You wear the lions mane} {%1} {%2}
}

#alias {cmd_imm_electric_on} {
  cmd_imm_transition {electric} {on} {You grab a Desert Bloom.} {%1} {%2}
}

#alias {cmd_imm_electric_off} {
  cmd_imm_transition {electric} {off} {You grab {A Purple Shard|a dwarven holy symbol}.} {%1} {%2}
}

#var {nodrop_ring} {wind-ring}
#var {weapon_nodrop} {wind-sword}
#var {weapon_noscrap} {achilles-spear}
#var {weapon_align_evil} {avenger}
#var {weapon_align_good} {fury}
#var {weapon_life_protect} {claw}
#var {current_weapon} {}

#var {mode_align} {}
#var {mode_scrap} {}
#var {mode_life_protect} {}

#alias {safe_put} {
  #if {"%1" != "$weapon_nodrop" && "%1" != "$nodrop_ring"} {
    put %1 %2
  } {
    debug I WILL NOT PUT NODROP ITEM {%1} IN %2
  }
}

#alias {reset_weapon_state} {
  #var {mode_align} {evil};
  #var {mode_scrap} {on};
  #var {mode_life_protect} {off};

  rem $weapon_noscrap; safe_put $weapon_noscrap case;

  #if {"$mode_life_protect" == "on"} {
    #var {current_weapon} {$weapon_life_protect}  
  } {
    #var {current_weapon} {$weapon_align_evil}
  };

  get $current_weapon case;
  rem $weapon_align_good;
  rem $weapon_align_evil;
  rem $weapon_life_protect;

  #if {"$weapon_align_good" != "$current_weapon"} {
    safe_put $weapon_align_good case
  };

  #if {"$weapon_align_evil" != "$current_weapon" && "$weapon_align_evil" != "$weapon_align_good"} {
    rem $weapon_align_evil; safe_put $weapon_align_evil case
  };

  #if {"$weapon_life_protect" != "$current_weapon"} {
    rem $weapon_life_protect; safe_put $weapon_life_protect case
  };
  
  wield $current_weapon;

  #if {"$imm[energy]" == "on"} {imm_energy_off};
  #if {"$imm[poison]" == "on"} {imm_poison_off};
  #if {"$imm[electric]" == "on"} {imm_electric_off};

  set_default_imms
}

#alias {cmd_reset_weapon_state} {
  exec_task {cmd_reset_weapon_state} {reset_weapon_state} {%1} {%2} {
    #action {You wield} {task_cmd_reset_weapon_state_done};    
    #action {You do not seem to have the} {task_cmd_reset_weapon_state_fail};
    #action {You are already wielding something.} {task_cmd_reset_weapon_state_fail}
  }
}

#alias {choose_best_weapon} {
  #local {last_weapon} {$current_weapon};

  #if {"$mode_scrap" == "off"} {
    #var {current_weapon} {$weapon_noscrap}
  }; #elseif {"$mode_life_protect" == "on"} {
    #var {current_weapon} {$weapon_life_protect}
  }; #elseif {"$mode_align" == "evil"} {
    #var {current_weapon} {$weapon_align_evil}
  }; #else {
    #var {current_weapon} {$weapon_align_good}
  };
  
  #if {"$last_weapon" != "$current_weapon"} {
    get $current_weapon case;  
    rem $last_weapon;
    wield $current_weapon;  
    safe_put $last_weapon case
  } {
    #show ALREADY WIELDING
  }
}


#nop --------------------------
#nop Overrides
#nop --------------------------

#var {item_held} {symbol}
#var {item_waist} {waistband}
#var {item_legs} {plates}

#alias {cmd_scrap_off} {
  #var {mode_scrap} {off};
  exec_task {cmd_scrap_off} {choose_best_weapon} {%1} {%2} {
    #action {ALREADY WIELDING} {task_cmd_scrap_off_done};
    #action {You wield Achilles' Spear.} {task_cmd_scrap_off_done};
    #action {a Fremen fighting knife} {task_cmd_scrap_off_done};
    #action {You do not seem to have the} {task_cmd_scrap_off_fail};    
    #action {You are already wielding something.} {task_cmd_scrap_off_fail}
  }
}

#alias {cmd_scrap_on} {
  #var {mode_scrap} {on};
  exec_task {cmd_scrap_on} {choose_best_weapon} {%1} {%2} {
    #action {ALREADY WIELDING} {task_cmd_scrap_on_done};  
    #action {You wield The Holy Avenger.} {task_cmd_scrap_on_done};
    #action {You wield A glowing trident.} {task_cmd_scrap_on_done};
    #action {You wield Clangeddin's Fury.} {task_cmd_scrap_on_done};
    #action {a Fremen fighting knife} {task_cmd_scrap_on_done};    
    #action {You wield A Golden Tentacle.} {task_cmd_scrap_on_done};    
    #action {You wield the sword of the wind.} {task_cmd_scrap_on_done};
    #action {You wield Claw of The Toucan.} {task_cmd_scrap_on_done};    
    #action {You do not seem to have the} {task_cmd_scrap_on_fail};    
    #action {You are already wielding something.} {task_cmd_scrap_on_fail}
  }
}

#alias {cmd_life_protect_on} {
  #var {mode_life_protect} {on};
  exec_task {cmd_life_protect_on} {choose_best_weapon} {%1} {%2} {
    #action {ALREADY WIELDING} {task_cmd_life_protect_on_done};  
    #action {You wield Claw of The Toucan.} {task_cmd_life_protect_on_done};
    #action {You do not seem to have the} {task_cmd_life_protect_on_fail};    
    #action {You are already wielding something.} {task_cmd_life_protect_on_fail}
  }
};

#alias {cmd_life_protect_off} {
  #var {mode_life_protect} {off};
  exec_task {cmd_life_protect_off} {choose_best_weapon} {%1} {%2} {
    #action {ALREADY WIELDING} {task_cmd_life_protect_off_done};  
    #action {You wield} {task_cmd_life_protect_off_done};
    #action {You do not seem to have the} {task_cmd_life_protect_off_fail};    
    #action {You are already wielding something.} {task_cmd_life_protect_off_fail}
  }
}

#alias {cmd_mob_align_evil} {
  #var {mode_align} {evil};
  exec_task {cmd_mob_align_evil} {choose_best_weapon} {%1} {%2} {
    #action {ALREADY WIELDING} {task_cmd_mob_align_evil_done};
    #action {You wield the sword of the wind.} {task_cmd_mob_align_evil_done};
    #action {You wield The Holy Avenger.} {task_cmd_mob_align_evil_done};
    #action {You wield Achilles' Spear.} {task_cmd_mob_align_evil_done};;
    #action {a Fremen fighting knife} {task_cmd_mob_align_evil_done};    
    #action {You wield Clangeddin's Fury.} {task_cmd_mob_align_evil_done};
    #action {You wield A Golden Tentacle.} {task_cmd_mob_align_evil_done};    
    #action {You wield a massive turkey leg.} {task_cmd_mob_align_evil_done};
    #action {You do not seem to have the} {task_cmd_mob_align_evil_fail};    
    #action {You are already wielding something.} {task_cmd_mob_align_evil_fail}
  }
}

#alias {cmd_mob_align_good} {
  #var {mode_align} {good};
  exec_task {cmd_mob_align_good} {choose_best_weapon} {%1} {%2} {
    #action {ALREADY WIELDING} {task_cmd_mob_align_good_done};
    #action {You wield the sword of the wind.} {task_cmd_mob_align_good_done};    
    #action {You wield The Holy Avenger.} {task_cmd_mob_align_good_done};
    #action {You wield Achilles' Spear.} {task_cmd_mob_align_good_done};
    #action {a Fremen fighting knife} {task_cmd_mob_align_good_done};        
    #action {You wield Clangeddin's Fury.} {task_cmd_mob_align_good_done};
    #action {You wield A Golden Tentacle.} {task_cmd_mob_align_good_done};    
    #action {You wield a massive turkey leg.} {task_cmd_mob_align_good_done};    
    #action {You do not seem to have the} {task_cmd_mob_align_good_fail};
    #action {You are already wielding something.} {task_cmd_mob_align_good_fail}
  }  
}

#alias {sneak} {
  get pelt case; rem $item_waist; wear pelt; safe_put $item_waist case
}

#alias {unsneak} {
  get $item_waist case; rem pelt; safe_put pelt case; wear $item_waist
}

#alias {cmd_sneak} {
  exec_task {cmd_sneak} {sneak} {%1} {%2} {
    #action {You wear The Pelt of the Golden Fox about your waist.} {task_cmd_sneak_done};
    #action {You are not using it.} {task_cmd_sneak_done}
  }
}

#alias {cmd_unsneak} {
  exec_task {cmd_unsneak} {unsneak} {%1} {%2} {
    #action {You wear Mystic Ruby Waistband about your waist.} {task_cmd_unsneak_done};
    #action {You wear a small mithril girdle about your waist.} {task_cmd_unsneak_done};    
    #action {You are not using it.} {task_cmd_unsneak_done}
  }
}
