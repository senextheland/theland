#class {thief} {open}

#nop --------------------------------
#nop Adapter
#nop --------------------------------

#alias {cmd_heal_me} {
  cmd_ask_for_heal {%1} {%2}
}

#alias {do_fight_assist} {
  debug ASSIST {%1} {%2};    
  #if {"$target" != "" && "$target" != "null"} {
    backstab_assist {$target}
  } {
    assist %1;
    circle
  }  
}


#nop --------------------------------
#nop Backstab
#nop --------------------------------

#var {thief_state} {idle}
#var {thief_miss} {0}
#var {thief_stab} {0}
#var {thief_fail} {0}

#alias {thief_log} {
  debug THIEF state=$thief_state combat=$combat_status miss=$thief_miss stab=$thief_stab fail=$thief_fail -- %0
}

#alias {thief_miss_inc} {
  #math {thief_miss} {$thief_miss + 1};
  thief_log miss
}

#alias {thief_stab_inc} {
  #math {thief_stab} {$thief_stab + 1};
  thief_log stab
}

#alias {thief_fail_inc} {
  #math {thief_fail} {$thief_fail + 1};
  debug fail
}

#alias {thief_count_reset} {
  #var {thief_miss} {0};
  #var {thief_stab} {0};
  #var {thief_fail} {0}  
}

#alias {backstab_assist} {
  debug TRY BACKSTAB {%1};
  #var {thief_mode} {backstab};
  backstab %1
}

#alias {backstab_assist_fallback} {
  thief_log BACKSTAB-ASSIST-FALLBACK;
  thief_transition {assist} {thief_do_assist}
}

#alias {thief_to_assist} {
  assist {$currently_assisting}
}

#alias {backstab_assist_retry} {
  thief_log BACKSTAB-ASSIST-RETRY;
  thief_transition {idle} {thief_do_retry}
}

#alias {thief_do_retry} {
  do_fight_assist {$currently_assisting}
}

#alias {backstab_assist_give_up} {
  thief_log BACKSTAB-ASSIST-GIVE-UP;
  thief_transition {idle} {#nop}
}

#alias {backstab_assist_fighting} {
  thief_transition {circle} {circle_once}
}

hook {on_rip} {add} {thief} {thief_rip}
#action {nimbly avoids your backstab, and you nearly cut your finger.} {debounce_backstab miss} {4}
#action {makes a strange sound, as you place} {debounce_backstab hit} {4}
#action {makes a strange sound but is suddenly very silent, as you place} {debounce_backstab hit} {4}
#action {limbs go rigid} {debounce_backstab hit} {4}
#action {You miss %1.} {debounce_backstab miss} {4}
#action {Backstab who?} {backstab_assist_fallback}
#action {No way! You are fighting for your life!} {backstab_assist_fighting} {6}

#alias {thief_rip} {
  #undelay {debounce_backstab};
  thief_transition {idle} {%1}
}

#alias {debounce_backstab} {
  #switch {"%1"} {
    #case {"hit"} {
      #var {thief_state} {circle};
      thief_stab_inc;
      reset_debounced_backstab
    };
    #case {"miss"} {
      thief_miss_inc;
      reset_debounced_backstab
    };
    #case {"fail"} {
      thief_fail_inc;
      reset_debounced_backstab
    };
    #default {
      debug DEBOUNCE-BACKSTAB: unrecognized command {%1}
    }
  }
}

#alias {reset_debounced_backstab} {#delay {debounce_backstab} {dispatch_debounced_backstab} {0.1}}

#nop When both dual-wield circle stabs fail, it seems like thief can fall out of assist
#nop so be sure to end_fight to reset fighting status so assist triggers again.

#alias {dispatch_debounced_backstab} {
  #if {$thief_stab > 0 || $thief_fail > 0} {
    thief_log debounced-backstab --> circle;
    thief_transition {circle} {circle_once}
  };
  #elseif {$thief_miss > 0} {
    #if {"$thief_state" == "backstab"} {
      thief_log debounced-backstab: all-misses --> assist;
      backstab_assist_fallback
    } {
      thief_log debounced-backstab: all-misses --> do_fight_assist;
      backstab_assist_retry      
    }
  };
  #else {
    thief_log debounced-backstab: hmm, nothing --> circle;
    thief_transition {circle} {circle_once}
  }
}

#alias {thief_transition} {
  thief_count_reset;
  #if {$movement < 100} {
    debug THIEF LOW MOVEMENT --> no circle, just assist;
    #var {thief_state} {assist};
    %2
  } {
    #var {thief_state} {%1};
    %2
  }
}


#nop --------------------------------
#nop Circle
#nop --------------------------------

#alias {circle_once} {circle}

#action {You are too exhausted to try something that complicated} {
  debug CIRCLE-EXHAUSTED;  
  debounce_backstab fail
}

#action {You tried to sneak around him, but he noticed you!} {debounce_backstab fail} {4}

#action {You need to be fighting before you can circle around to the back of your opponent.} {
  #if {"$thief_state" == "circle" && "$combat_status" == "fighting"} {
    thief_log CIRCLE-NO-FIGHT --> idle;
    backstab_assist_give_up
  } {
    thief_log CIRCLE-NO-FIGHT --> ignore
  }
}
    
#action {Circle around back, are you crazy they are hitting you!} {
  debug CIRCLE-NOT-ASSISTING --> do nothing;
  backstab_assist_give_up
}

#class {thief} {save}
#class {thief} {close}